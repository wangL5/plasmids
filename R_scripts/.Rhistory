# Total    740 8060310997 1.00000
pairwise_adonis <- pairwise.adonis(dist_matrix, mpspades_query_target$mpspades_detection)
install.packages("pairwiseAdonis")
# Your original 3-group MANOVA
manova_result <- manova(cbind(genomad_score, num_gene_calls_contig) ~ mpspades_detection,
data = your_data)
install.packages('devtools') # Assuming you don't have devtools package already
library(devtools)
install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
library(vegan)
library(pairwiseAdonis)
# analyze the centroids of scatter plots --> looking at contig_length vs. num gene calls
# create distance matrix and test centroid differences
dist_matrix <- dist(mpspades_query_target[, c("contig_length", "num_gene_calls_contig")])
#adonis2(dist_matrix ~ mpspades_detection, data = mpspades_query_target)
# centroids are significantly different
#          Df   SumOfSqs      R2      F Pr(>F)
# Model      2  856330655 0.10624 43.863  0.001 ***
# Residual 738 7203980343 0.89376
# Total    740 8060310997 1.00000
pairwise_adonis <- pairwise.adonis(dist_matrix, mpspades_query_target$mpspades_detection)
print(pairwise_adonis)
library(ggplot2)
library(pals)
library(ggpmisc)
mpspades_plasmid_contig_detect <- ggplot(mpspades_query_target, aes(x = contig_length, y = num_gene_calls_contig, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (contigs) vs. PlasX Score",
x = "PlasX Score",
y = "Number of Gene Calls (contig)",
color = "detection status",
size = "GC content (contig)"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
library(ggplot2)
library(pals)
library(ggpmisc)
mpspades_plasmid_contig_detect <- ggplot(mpspades_query_target, aes(x = contig_length, y = num_gene_calls_contig, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (contigs) vs. Contig Length",
x = "Contig Length",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
library(ggplot2)
library(pals)
library(ggpmisc)
mpspades_plasmid_contig_detect <- ggplot(mpspades_query_target, aes(x = contig_length, y = num_gene_calls_contig, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
stat_ellipse(aes(fill = mpspades_detection), alpha = 0.1, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (contigs) vs. Contig Length",
x = "Contig Length",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
library(ggplot2)
library(pals)
library(ggpmisc)
mpspades_plasmid_contig_detect <- ggplot(mpspades_query_target, aes(x = contig_length, y = num_gene_calls_contig, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#stat_ellipse(aes(fill = mpspades_detection), alpha = 0.1, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (contigs) vs. Contig Length",
x = "Contig Length",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
megahit_query_target = read.csv("query_target_metadata_megahit_all.txt", sep="\t")
library(ggplot2)
library(pals)
library(ggpmisc)
install.packages("ggmisc")
library(ggplot2)
library(pals)
library(ggpmisc)
library(ggplot2)
library(pals)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = contig_length, y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#stat_ellipse(aes(fill = mpspades_detection), alpha = 0.1, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Contig Length",
x = "Contig Length",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(megahit_plasmid_contig_detect)
---
title: "CAMI2 Benchmarking Data"
library(vegan)
library(pairwiseAdonis)
install.packages('devtools') # Assuming you don't have devtools package already
library(devtools)
install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
dist_matrix_megahit <- dist(megahit_query_target[, c("contig_length", "num_gene_calls_contig")])
adonis2(dist_matrix_megahit ~ megahit_detection, data = megahit_query_target)
pairwise_adonis_megahit <- pairwise.adonis(dist_matrix_megahit, megahit_query_target$megahit_detection)
library(pairwiseAdonis)
pairwise_adonis_megahit <- pairwise.adonis(dist_matrix_megahit, megahit_query_target$megahit_detection)
print(pairwise_adonis_megahit)
pairwise_adonis_megahit <- pairwise.adonis(dist_matrix_megahit, megahit_query_target$megahit_detection)
library(ggplot2)
library(pals)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = plasx_score, y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#stat_ellipse(aes(fill = mpspades_detection), alpha = 0.1, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Plasx Score",
x = "Plasx Score",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
library(ggplot2)
library(pals)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = plasx_score, y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Plasx Score",
x = "Plasx Score",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
library(ggplot2)
library(pals)
library(ggpmisc)
library(ggplot2)
library(pals)
mpspades_plasmid_contig_detect <- ggplot(mpspades_query_target, aes(x = contig_length, y = num_gene_calls_contig, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#stat_ellipse(aes(fill = mpspades_detection), alpha = 0.1, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (contigs) vs. Contig Length",
x = "Contig Length",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
library(ggplot2)
library(pals)
mpspades_plasmid_contig_detect <- ggplot(mpspades_query_target, aes(x = log(contig_length), y = num_gene_calls_contig, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#stat_ellipse(aes(fill = mpspades_detection), alpha = 0.1, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (contigs) vs. Contig Length",
x = "Contig Length",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
library(ggplot2)
library(pals)
mpspades_plasmid_contig_detect <- ggplot(mpspades_query_target, aes(x = log(contig_length), y = num_gene_calls_contig, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#stat_ellipse(aes(fill = mpspades_detection), alpha = 0.1, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (contigs) vs. Contig Length",
x = "Contig Length (Log Transformed)",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
View(megahit_query_target)
library(ggplot2)
library(pals)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = log(contig_length), y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Plasx Score",
x = "Plasx Score",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
library(ggplot2)
library(pals)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = log(contig_length), y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Plasx Score",
x = "Plasx Score",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(megahit_plasmid_contig_detect)
library(ggplot2)
library(pals)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = log(contig_length), y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Contig Length",
x = "Contig Length (Log Transformed)",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(megahit_plasmid_contig_detect)
library(ggplot2)
library(pals)
mpspades_plasmid_contig_detect <- ggplot(mpspades_query_target, aes(x = log(contig_length), y = num_gene_calls_contig, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
stat_ellipse(aes(fill = mpspades_detection), alpha = 0.1, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (mpspades contigs) vs. Contig Length",
x = "Contig Length (Log Transformed)",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
library(ggplot2)
library(pals)
mpspades_plasmid_contig_detect <- ggplot(mpspades_query_target, aes(x = log(contig_length), y = num_gene_calls_contig, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
stat_ellipse(aes(fill = mpspades_detection), alpha = 0.5, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (mpspades contigs) vs. Contig Length",
x = "Contig Length (Log Transformed)",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
library(ggplot2)
library(pals)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = log(contig_length), y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
stat_ellipse(aes(fill = mpspades_detection), alpha = 0.5, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Contig Length",
x = "Contig Length (Log Transformed)",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(megahit_plasmid_contig_detect)
library(ggplot2)
library(pals)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = log(contig_length), y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
stat_ellipse(aes(fill = megahit_detection), alpha = 0.5, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Contig Length",
x = "Contig Length (Log Transformed)",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(megahit_plasmid_contig_detect)
library(ggplot2)
library(pals)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = contig_length, y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
stat_ellipse(aes(fill = megahit_detection), alpha = 0.5, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Contig Length",
x = "Contig Length (Log Transformed)",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(megahit_plasmid_contig_detect)
library(ggplot2)
library(pals)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = plasx_score, y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
# stat_ellipse(aes(fill = megahit_detection), alpha = 0.5, type = "norm", level = 0.95) +
geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Plasx Score",
x = "Plasx Score",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
install.packages("ggpmisc")
library(ggplot2)
library(pals)
library(ggpmisc)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = plasx_score, y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
# stat_ellipse(aes(fill = megahit_detection), alpha = 0.5, type = "norm", level = 0.95) +
geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Plasx Score",
x = "Plasx Score",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(megahit_plasmid_contig_detect)
library(ggplot2)
library(pals)
library(ggpmisc)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = genomad_score, y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
# stat_ellipse(aes(fill = megahit_detection), alpha = 0.5, type = "norm", level = 0.95) +
geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Plasx Score",
x = "Genomad Score",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(megahit_plasmid_contig_detect)
library(ggplot2)
library(pals)
library(ggpmisc)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = genomad_score, y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
# stat_ellipse(aes(fill = megahit_detection), alpha = 0.5, type = "norm", level = 0.95) +
geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Genomad Score",
x = "Genomad Score",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(megahit_plasmid_contig_detect)
