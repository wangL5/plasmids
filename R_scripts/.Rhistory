theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
strip.text = element_text(size = 11, face = "bold"),
axis.title.x = element_blank(),
axis.title.y = element_blank()) +
facet_wrap(~ metric, scales = "free_y", nrow = 1,
labeller = labeller(metric = c("coverage" = "Coverage",
"GC_content" = "GC Content (%)",
"num_gene_calls" = "Number of Gene Calls")))
View(plasmid_CE_long_filtered)
plasmid_CE_annotations <- read.csv("plasmid_CE_metadata.txt", sep="\t")
library(ggplot2)
library(tidyverse)
plasmid_CE_long <- plasmid_CE_annotations %>%
select(mpspades_detection, GC_content, num_gene_calls, coverage) %>%
pivot_longer(cols = c(GC_content, num_gene_calls, coverage),
names_to = "metric",
values_to = "value")
# drop #N/A
plasmid_CE_long_filtered <- plasmid_CE_long[plasmid_CE_long$mpspades_detection != "", ]
ggplot(plasmid_CE_long_filtered, aes(x = mpspades_detection, y = value, fill = mpspades_detection)) +
geom_boxplot(alpha = 0.7) +
scale_fill_manual(values = c("detected" = "blue",
"undetected_genomad" = "darkorange",
"undetected_genomad_plasx" = "red")) +
labs(title = "Plasmid characteristics by detection group (mpspades)", fill = "Detection Status") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
strip.text = element_text(size = 11, face = "bold"),
axis.title.x = element_blank(),
axis.title.y = element_blank()) +
facet_wrap(~ metric, scales = "free_y", nrow = 1,
labeller = labeller(metric = c("coverage" = "Coverage",
"GC_content" = "GC Content (%)",
"num_gene_calls" = "Number of Gene Calls")))
plasmid_CE_long_megahit <- plasmid_CE_annotations %>%
select(megahit_detection, GC_content, num_gene_calls, coverage) %>%
pivot_longer(cols = c(GC_content, num_gene_calls, coverage),
names_to = "metric",
values_to = "value")
ggplot(plasmid_CE_long_megahit, aes(x = megahit_detection, y = value, fill = megahit_detection)) +
geom_boxplot(alpha = 0.7) +
scale_fill_manual(values = c("detected" = "blue",
"undetected_genomad" = "darkorange",
"undetected_genomad_plasx" = "red")) +
labs(title = "Plasmid characteristics by detection group (megahit)", fill = "Detection Status") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
strip.text = element_text(size = 11, face = "bold"),
axis.title.x = element_blank(),
axis.title.y = element_blank()) +
facet_wrap(~ metric, scales = "free_y", nrow = 1,
labeller = labeller(metric = c("coverage" = "Coverage",
"GC_content" = "GC Content (%)",
"num_gene_calls" = "Number of Gene Calls")))
plasmid_CE_long_megahit <- plasmid_CE_annotations %>%
select(megahit_detection, GC_content, num_gene_calls) %>%
pivot_longer(cols = c(GC_content, num_gene_calls),
names_to = "metric",
values_to = "value")
ggplot(plasmid_CE_long_megahit, aes(x = megahit_detection, y = value, fill = megahit_detection)) +
geom_boxplot(alpha = 0.7) +
scale_fill_manual(values = c("detected" = "blue",
"undetected_genomad" = "darkorange",
"undetected_genomad_plasx" = "red")) +
labs(title = "Plasmid characteristics by detection group (megahit)", fill = "Detection Status") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
strip.text = element_text(size = 11, face = "bold"),
axis.title.x = element_blank(),
axis.title.y = element_blank()) +
facet_wrap(~ metric, scales = "free_y", nrow = 1,
labeller = labeller(metric = c("GC_content" = "GC Content (%)",
"num_gene_calls" = "Number of Gene Calls")))
plasmid_CE_annotations <- read.csv("plasmid_CE_metadata.txt", sep="\t")
library(ggplot2)
library(tidyverse)
plasmid_CE_long <- plasmid_CE_annotations %>%
select(mpspades_detection, GC_content, num_gene_calls) %>%
pivot_longer(cols = c(GC_content, num_gene_calls),
names_to = "metric",
values_to = "value")
# drop #N/A
plasmid_CE_long_filtered <- plasmid_CE_long[plasmid_CE_long$mpspades_detection != "", ]
ggplot(plasmid_CE_long_filtered, aes(x = mpspades_detection, y = value, fill = mpspades_detection)) +
geom_boxplot(alpha = 0.7) +
scale_fill_manual(values = c("detected" = "blue",
"undetected_genomad" = "darkorange",
"undetected_genomad_plasx" = "red")) +
labs(title = "Plasmid characteristics by detection group (mpspades)", fill = "Detection Status") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
strip.text = element_text(size = 11, face = "bold"),
axis.title.x = element_blank(),
axis.title.y = element_blank()) +
facet_wrap(~ metric, scales = "free_y", nrow = 1,
labeller = labeller(metric = c(
"GC_content" = "GC Content (%)",
"num_gene_calls" = "Number of Gene Calls")))
library(ggplot2)
library(pals)
library(ggpmisc)
mpspades_plasmid_contig_detect <- ggplot(mpspades_query_target, aes(x = plasx_score, y = num_gene_calls_contig, size = GC_contig, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (contigs) vs. PlasX Score",
x = "PlasX Score",
y = "Number of Gene Calls (contig)",
color = "detection status",
size = "GC content (contig)"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
plasmid_CE_annotations <- read.csv("plasmid_CE_metadata.txt", sep="\t")
library(ggplot2)
library(tidyverse)
plasmid_CE_long <- plasmid_CE_annotations %>%
select(mpspades_detection, GC_content, num_gene_calls) %>%
pivot_longer(cols = c(GC_content, num_gene_calls),
names_to = "metric",
values_to = "value")
# drop #N/A
plasmid_CE_long_filtered <- plasmid_CE_long[plasmid_CE_long$mpspades_detection != "", ]
ggplot(plasmid_CE_long_filtered, aes(x = mpspades_detection, y = value, fill = mpspades_detection)) +
geom_boxplot(alpha = 0.7) +
scale_fill_manual(values = c("detected" = "blue",
"undetected_genomad" = "darkorange",
"undetected_genomad_plasx" = "red")) +
labs(title = "Plasmid characteristics by detection group (mpspades)", fill = "Detection Status") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
strip.text = element_text(size = 11, face = "bold"),
axis.title.x = element_blank(),
axis.title.y = element_blank()) +
facet_wrap(~ metric, scales = "free_y", nrow = 1,
labeller = labeller(metric = c(
"GC_content" = "GC Content (%)",
"num_gene_calls" = "Number of Gene Calls")))
plasmid_CE_long_megahit <- plasmid_CE_annotations %>%
select(megahit_detection, GC_content, num_gene_calls) %>%
pivot_longer(cols = c(GC_content, num_gene_calls),
names_to = "metric",
values_to = "value")
ggplot(plasmid_CE_long_megahit, aes(x = megahit_detection, y = value, fill = megahit_detection)) +
geom_boxplot(alpha = 0.7) +
scale_fill_manual(values = c("detected" = "blue",
"undetected_genomad" = "darkorange",
"undetected_genomad_plasx" = "red")) +
labs(title = "Plasmid characteristics by detection group (megahit)", fill = "Detection Status") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
strip.text = element_text(size = 11, face = "bold"),
axis.title.x = element_blank(),
axis.title.y = element_blank()) +
facet_wrap(~ metric, scales = "free_y", nrow = 1,
labeller = labeller(metric = c("GC_content" = "GC Content (%)",
"num_gene_calls" = "Number of Gene Calls")))
plasmid_CE_long_filtered
View(plasmid_CE_annotations)
plasmid_CE_annotations
plasmid_CE_annotations.head
head(plasmid_CE_annotations)
# creating a new binary variable (for both megahit and mpspades) to look at differences between detected and undetected
plasmid_CE_annotations$mpspades_binary <- ifelse(
plasmid_CE_annotations$mpspades_detection == "detected",
"detected",
"undetected"
)
plasmid_CE_annotations$megahit_binary <- ifelse(
plasmid_CE_annotations$megahit_detection == "detected",
"detected",
"undetected"
)
# creating a new binary variable (for both megahit and mpspades) to look at differences between detected and undetected
plasmid_CE_annotations <- read.csv("plasmid_CE_metadata.txt", sep="\t")
plasmid_CE_annotations_mpspades <- plasmid_CE_annotations
plasmid_CE_annotations_mpspades <- plasmid_CE_annotations_mpspades[plasmid_CE_annotations_mpspades$mpspades_detection != "", ]
plasmid_CE_annotations_mpspades$mpspades_binary <- ifelse(
plasmid_CE_annotations_mpspades$mpspades_detection == "detected",
"detected",
"undetected"
)
plasmid_CE_annotations$megahit_binary <- ifelse(
plasmid_CE_annotations$megahit_detection == "detected",
"detected",
"undetected"
)
View(plasmid_CE_annotations_mpspades)
plasmid_CE_long_megahit_binary <- plasmid_CE_annotations %>%
select(megahit_binary, GC_content, num_gene_calls) %>%
pivot_longer(cols = c(GC_content, num_gene_calls),
names_to = "metric",
values_to = "value")
plasmid_CE_long_mpspades_binary <- plasmid_CE_annotations_mpspades %>%
select(mpspades_binary, GC_content, num_gene_calls) %>%
pivot_longer(cols = c(GC_content, num_gene_calls),
names_to = "metric",
values_to = "value")
ggplot(plasmid_CE_long_mpspades_binary, aes(x = mpspades_binary, y = value, fill = mpspades_detection)) +
geom_boxplot(alpha = 0.7) +
scale_fill_manual(values = c("detected" = "blue",
"undetected" = "red")) +
labs(title = "Plasmid characteristics by detection group (mpspades)", fill = "Detection Status") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
strip.text = element_text(size = 11, face = "bold"),
axis.title.x = element_blank(),
axis.title.y = element_blank()) +
facet_wrap(~ metric, scales = "free_y", nrow = 1,
labeller = labeller(metric = c(
"GC_content" = "GC Content (%)",
"num_gene_calls" = "Number of Gene Calls")))
ggplot(plasmid_CE_long_mpspades_binary, aes(x = mpspades_binary, y = value, fill = mpspades_binary)) +
geom_boxplot(alpha = 0.7) +
scale_fill_manual(values = c("detected" = "blue",
"undetected" = "red")) +
labs(title = "Plasmid characteristics by detection group (mpspades)", fill = "Detection Status") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
strip.text = element_text(size = 11, face = "bold"),
axis.title.x = element_blank(),
axis.title.y = element_blank()) +
facet_wrap(~ metric, scales = "free_y", nrow = 1,
labeller = labeller(metric = c(
"GC_content" = "GC Content (%)",
"num_gene_calls" = "Number of Gene Calls")))
ggplot(plasmid_CE_long_megahit_binary, aes(x = megahit_binary, y = value, fill = megahit_binary)) +
geom_boxplot(alpha = 0.7) +
scale_fill_manual(values = c("detected" = "blue",
"undetected" = "red")) +
labs(title = "Plasmid characteristics by detection group (megahit)", fill = "Detection Status") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
strip.text = element_text(size = 11, face = "bold"),
axis.title.x = element_blank(),
axis.title.y = element_blank()) +
facet_wrap(~ metric, scales = "free_y", nrow = 1,
labeller = labeller(metric = c("GC_content" = "GC Content (%)",
"num_gene_calls" = "Number of Gene Calls")))
Wilcox.test(GC_content ~ mpspades_binary, data = plasmid_CE_annotations_mpspades)
wilcox.test(GC_content ~ mpspades_binary, data = plasmid_CE_annotations_mpspades)
wilcox.test(num_gene_calls ~ mpspades_binary, data = plasmid_CE_annotations_mpspades)
wilcox.test(GC_content ~ megahit_binary, data = plasmid_CE_annotations)
wilcox.test(num_gene_calls ~ megahit_binary, data = plasmid_CE_annotations)
View(plasmid_CE_annotations_mpspades)
GC_num_genes_mpspades <- ggplot(plasmid_CE_annotations_mpspades, aes(x = num_gene_calls, y = GC_content, size = contig_length, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "GC content vs. Num Gene Calls (mpspades)",
x = "num gene calls",
y = "GC content",
color = "detection status",
size = "contig_length"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
GC_num_genes_mpspades <- ggplot(plasmid_CE_annotations_mpspades, aes(x = num_gene_calls, y = GC_content, size = contig_length, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "GC content vs. Num Gene Calls (mpspades)",
x = "num gene calls",
y = "GC content",
color = "detection status",
size = "contig_length"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(GC_num_genes_mpspades)
GC_num_genes_mpspades <- ggplot(plasmid_CE_annotations_mpspades, aes(x = num_gene_calls, y = GC_content, size = contig_length, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "GC content vs. Num Gene Calls (mpspades)",
x = "num gene calls",
y = "GC content",
color = "detection status",
size = "contig_length"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(GC_num_genes_mpspades)
GC_num_genes_mpspades <- ggplot(plasmid_CE_annotations_mpspades, aes(x = num_gene_calls, y = contig_length, size = GC_content, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "GC content vs. Num Gene Calls (mpspades)",
x = "num gene calls",
y = "GC content",
color = "detection status",
size = "contig_length"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(GC_num_genes_mpspades)
GC_num_genes_mpspades <- ggplot(plasmid_CE_annotations_mpspades, aes(x = num_gene_calls, y = contig_length, size = GC_content, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "GC content vs. Num Gene Calls (mpspades)",
x = "num gene calls",
y = "GC content",
color = "detection status",
size = "contig_length"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(GC_num_genes_mpspades)
GC_num_genes_mpspades <- ggplot(plasmid_CE_annotations_mpspades, aes(x = num_gene_calls, y = contig_length, size = GC_content, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Reference Genome GC content vs. Num Gene Calls",
x = "num gene calls",
y = "GC content",
color = "detection status (mpspades)",
size = "contig_length"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(GC_num_genes_mpspades)
install.packages("vegan")
View(mpspades_query_target)
library(vegan)
# analyze the centroids of scatter plots --> looking at contig_length vs. num gene calls
# create distance matrix and test centroid differences
dist_matrix <- dist(mpspades_query_target[, c("contig_length", "num_gene_calls_contig")])
adonis2(dist_matrix ~ mpspades_detection, data = mpspades_query_target)
library(vegan)
# analyze the centroids of scatter plots --> looking at contig_length vs. num gene calls
# create distance matrix and test centroid differences
dist_matrix <- dist(mpspades_query_target[, c("contig_length", "num_gene_calls_contig")])
# adonis2(dist_matrix ~ mpspades_detection, data = mpspades_query_target)
# centroids are significantly different
#          Df   SumOfSqs      R2      F Pr(>F)
# Model      2  856330655 0.10624 43.863  0.001 ***
# Residual 738 7203980343 0.89376
# Total    740 8060310997 1.00000
pairwise_adonis <- pairwise.adonis(dist_matrix, mpspades_query_target$mpspades_detection)
install.packages("pairwiseAdonis")
# Your original 3-group MANOVA
manova_result <- manova(cbind(genomad_score, num_gene_calls_contig) ~ mpspades_detection,
data = your_data)
install.packages('devtools') # Assuming you don't have devtools package already
library(devtools)
install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
library(vegan)
library(pairwiseAdonis)
# analyze the centroids of scatter plots --> looking at contig_length vs. num gene calls
# create distance matrix and test centroid differences
dist_matrix <- dist(mpspades_query_target[, c("contig_length", "num_gene_calls_contig")])
#adonis2(dist_matrix ~ mpspades_detection, data = mpspades_query_target)
# centroids are significantly different
#          Df   SumOfSqs      R2      F Pr(>F)
# Model      2  856330655 0.10624 43.863  0.001 ***
# Residual 738 7203980343 0.89376
# Total    740 8060310997 1.00000
pairwise_adonis <- pairwise.adonis(dist_matrix, mpspades_query_target$mpspades_detection)
print(pairwise_adonis)
library(ggplot2)
library(pals)
library(ggpmisc)
mpspades_plasmid_contig_detect <- ggplot(mpspades_query_target, aes(x = contig_length, y = num_gene_calls_contig, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (contigs) vs. PlasX Score",
x = "PlasX Score",
y = "Number of Gene Calls (contig)",
color = "detection status",
size = "GC content (contig)"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
library(ggplot2)
library(pals)
library(ggpmisc)
mpspades_plasmid_contig_detect <- ggplot(mpspades_query_target, aes(x = contig_length, y = num_gene_calls_contig, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (contigs) vs. Contig Length",
x = "Contig Length",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
library(ggplot2)
library(pals)
library(ggpmisc)
mpspades_plasmid_contig_detect <- ggplot(mpspades_query_target, aes(x = contig_length, y = num_gene_calls_contig, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
stat_ellipse(aes(fill = mpspades_detection), alpha = 0.1, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (contigs) vs. Contig Length",
x = "Contig Length",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
library(ggplot2)
library(pals)
library(ggpmisc)
mpspades_plasmid_contig_detect <- ggplot(mpspades_query_target, aes(x = contig_length, y = num_gene_calls_contig, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#stat_ellipse(aes(fill = mpspades_detection), alpha = 0.1, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (contigs) vs. Contig Length",
x = "Contig Length",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
