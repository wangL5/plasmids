x = "Contig Length",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
library(ggplot2)
library(pals)
mpspades_plasmid_contig_detect <- ggplot(mpspades_query_target, aes(x = log(contig_length), y = num_gene_calls_contig, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#stat_ellipse(aes(fill = mpspades_detection), alpha = 0.1, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (contigs) vs. Contig Length",
x = "Contig Length (Log Transformed)",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
View(megahit_query_target)
library(ggplot2)
library(pals)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = log(contig_length), y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Plasx Score",
x = "Plasx Score",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
library(ggplot2)
library(pals)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = log(contig_length), y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Plasx Score",
x = "Plasx Score",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(megahit_plasmid_contig_detect)
library(ggplot2)
library(pals)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = log(contig_length), y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Contig Length",
x = "Contig Length (Log Transformed)",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(megahit_plasmid_contig_detect)
library(ggplot2)
library(pals)
mpspades_plasmid_contig_detect <- ggplot(mpspades_query_target, aes(x = log(contig_length), y = num_gene_calls_contig, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
stat_ellipse(aes(fill = mpspades_detection), alpha = 0.1, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (mpspades contigs) vs. Contig Length",
x = "Contig Length (Log Transformed)",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
library(ggplot2)
library(pals)
mpspades_plasmid_contig_detect <- ggplot(mpspades_query_target, aes(x = log(contig_length), y = num_gene_calls_contig, color = mpspades_detection, group = mpspades_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
stat_ellipse(aes(fill = mpspades_detection), alpha = 0.5, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (mpspades contigs) vs. Contig Length",
x = "Contig Length (Log Transformed)",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(mpspades_plasmid_contig_detect)
library(ggplot2)
library(pals)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = log(contig_length), y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
stat_ellipse(aes(fill = mpspades_detection), alpha = 0.5, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Contig Length",
x = "Contig Length (Log Transformed)",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(megahit_plasmid_contig_detect)
library(ggplot2)
library(pals)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = log(contig_length), y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
stat_ellipse(aes(fill = megahit_detection), alpha = 0.5, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Contig Length",
x = "Contig Length (Log Transformed)",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(megahit_plasmid_contig_detect)
library(ggplot2)
library(pals)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = contig_length, y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
stat_ellipse(aes(fill = megahit_detection), alpha = 0.5, type = "norm", level = 0.95) +
#geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
#stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
#formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Contig Length",
x = "Contig Length (Log Transformed)",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(megahit_plasmid_contig_detect)
library(ggplot2)
library(pals)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = plasx_score, y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
# stat_ellipse(aes(fill = megahit_detection), alpha = 0.5, type = "norm", level = 0.95) +
geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Plasx Score",
x = "Plasx Score",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
install.packages("ggpmisc")
library(ggplot2)
library(pals)
library(ggpmisc)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = plasx_score, y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
# stat_ellipse(aes(fill = megahit_detection), alpha = 0.5, type = "norm", level = 0.95) +
geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Plasx Score",
x = "Plasx Score",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(megahit_plasmid_contig_detect)
library(ggplot2)
library(pals)
library(ggpmisc)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = genomad_score, y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
# stat_ellipse(aes(fill = megahit_detection), alpha = 0.5, type = "norm", level = 0.95) +
geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Plasx Score",
x = "Genomad Score",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(megahit_plasmid_contig_detect)
library(ggplot2)
library(pals)
library(ggpmisc)
megahit_plasmid_contig_detect <- ggplot(megahit_query_target, aes(x = genomad_score, y = num_gene_calls_contig, color = megahit_detection, group = megahit_detection)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
geom_point(alpha = 0.7, size=2) +
# stat_ellipse(aes(fill = megahit_detection), alpha = 0.5, type = "norm", level = 0.95) +
geom_smooth(method = "lm", se = TRUE, alpha = 0.2, linewidth = 1) +
stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*")),
formula = y ~ x, parse = TRUE, size = 3) +
labs(
title = "Gene Calls (megahit contigs) vs. Genomad Score",
x = "Genomad Score",
y = "Number of Gene Calls (contig)",
color = "detection status"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(megahit_plasmid_contig_detect)
tetra <- read.csv("TETRA_correlations.txt")
View(tetra)
tetra <- read.csv("TETRA_correlations.txt", header=TRUE, row.names=1)
View(tetra)
tetra <- read.csv("TETRA_correlations.txt", header=TRUE, row.names=1, sep=" ")
tetra <- read.csv("TETRA_correlations.txt", header=TRUE, row.names=1, sep="\t")
View(tetra)
library(MASS)
dist_matrix <- as.dist(1-tetra)
mds_result <- isoMDS(dist_matrix, k = 2)
mds_coords <- data.frame(
Plasmid = rownames(similarity_data),
MDS1 = mds_result$points[,1],
MDS2 = mds_result$points[,2]
)
mds_result <- isoMDS(dist_matrix, k = 2)
mds_coords <- data.frame(
Plasmid = rownames(tetra),
MDS1 = mds_result$points[,1],
MDS2 = mds_result$points[,2]
)
ggplot(mds_coords, aes(x = MDS1, y = MDS2)) +
geom_point(size = 3, alpha = 0.7) +
labs(title = "MDS of Plasmids Based on TETRA Similarity",
x = "MDS Dimension 1", y = "MDS Dimension 2") +
theme_minimal()
library(ggplot2)
ggplot(mds_coords, aes(x = MDS1, y = MDS2)) +
geom_point(size = 3, alpha = 0.7) +
labs(title = "MDS of Plasmids Based on TETRA Similarity",
x = "MDS Dimension 1", y = "MDS Dimension 2") +
theme_minimal()
anvio_metadata <- read.csv("plasmid_CE_metadata_anvio.txt", sep="\t", header=True)
anvio_metadata <- read.csv("plasmid_CE_metadata_anvio.txt", sep="\t", header=TRUE)
View(anvio_metadata)
View(mds_coords)
# merge the MSD table with the metadata
mds_with_metadata <- merge(mds_coords, metadata, by.x="Plasmid", by.y="genome_id", all.x=TRUE)
# merge the MSD table with the metadata
mds_with_metadata <- merge(mds_coords, anvio_metadata, by.x="Plasmid", by.y="genome_id", all.x=TRUE)
library(ggplot2)
ggplot(mds_with_metadatas, aes(x = MDS1, y = MDS2, color=mpspades_detection)) +
geom_point(size = 3, alpha = 0.7) +
labs(title = "MDS of Plasmids Based on Tetranucleotide Similarity",
x = "MDS Dimension 1", y = "MDS Dimension 2") +
theme_minimal() + theme(legend.title = element.text(size=12),
plot.title = element.text(hjust=0.5))
library(ggplot2)
ggplot(mds_with_metadata, aes(x = MDS1, y = MDS2, color=mpspades_detection)) +
geom_point(size = 3, alpha = 0.7) +
labs(title = "MDS of Plasmids Based on Tetranucleotide Similarity",
x = "MDS Dimension 1", y = "MDS Dimension 2") +
theme_minimal() + theme(legend.title = element.text(size=12),
plot.title = element.text(hjust=0.5))
library(ggplot2)
ggplot(mds_with_metadata, aes(x = MDS1, y = MDS2, color=mpspades_detection)) +
geom_point(size = 3, alpha = 0.7) +
labs(title = "MDS of Plasmids Based on Tetranucleotide Similarity",
x = "MDS Dimension 1", y = "MDS Dimension 2") +
theme_minimal() + theme(legend.title = element_text(size=12),
plot.title = element_text(hjust=0.5))
library(ggplot2)
ggplot(mds_with_metadata, aes(x = MDS1, y = MDS2, color=megahit_detection)) +
geom_point(size = 3, alpha = 0.7) +
labs(title = "MDS of Plasmids Based on Tetranucleotide Similarity",
x = "MDS Dimension 1", y = "MDS Dimension 2") +
theme_minimal() + theme(legend.title = element_text(size=12),
plot.title = element_text(hjust=0.5))
library(ggplot2)
ggplot(mds_with_metadata, aes(x = MDS1, y = MDS2, color=megahit_detection)) +
geom_point(size = 3, alpha = 0.7) +
stat_ellipse(level = 0.95, size = 1) +
labs(title = "MDS of Plasmids Based on Tetranucleotide Similarity",
x = "MDS Dimension 1", y = "MDS Dimension 2") +
theme_minimal() + theme(legend.title = element_text(size=12),
plot.title = element_text(hjust=0.5))
library(ggplot2)
ggplot(mds_with_metadata, aes(x = MDS1, y = MDS2, color=megahit_detection)) +
geom_point(size = 3, alpha = 0.7) +
stat_chull(alpha = 0.1, geom = "polygon") +
labs(title = "MDS of Plasmids Based on Tetranucleotide Similarity",
x = "MDS Dimension 1", y = "MDS Dimension 2") +
theme_minimal() + theme(legend.title = element_text(size=12),
plot.title = element_text(hjust=0.5))
library(ggplot2)
ggplot(mds_with_metadata, aes(x = MDS1, y = MDS2, color=megahit_detection)) +
geom_point(size = 3, alpha = 0.7) +
stat_chull(alpha = 0.1, geom = "polygon") +
labs(title = "MDS of Plasmids Based on Tetranucleotide Similarity",
x = "MDS Dimension 1", y = "MDS Dimension 2") +
theme_minimal() + theme(legend.title = element_text(size=12),
plot.title = element_text(hjust=0.5))
library(ggplot2)
library(dplyr)
# Calculate group centroids
centroids <- mds_with_metadata %>%
group_by(megahit_detection) %>%
summarise(
centroid_MDS1 = mean(MDS1, na.rm = TRUE),
centroid_MDS2 = mean(MDS2, na.rm = TRUE),
.groups = 'drop'
)
ggplot(mds_with_metadata, aes(x = MDS1, y = MDS2, color=megahit_detection)) +
geom_point(size = 3, alpha = 0.7) +
geom_point(data = centroids,
aes(x = centroid_MDS1, y = centroid_MDS2, fill = plasmid_type),
shape = 23, size = 6, color = "black", stroke = 1) +
stat_chull(alpha = 0.1, geom = "polygon") +
labs(title = "MDS of Plasmids Based on Tetranucleotide Similarity",
x = "MDS Dimension 1", y = "MDS Dimension 2") +
theme_minimal() + theme(legend.title = element_text(size=12),
plot.title = element_text(hjust=0.5))
library(ggplot2)
library(dplyr)
# Calculate group centroids
centroids <- mds_with_metadata %>%
group_by(megahit_detection) %>%
summarise(
centroid_MDS1 = mean(MDS1, na.rm = TRUE),
centroid_MDS2 = mean(MDS2, na.rm = TRUE),
.groups = 'drop'
)
ggplot(mds_with_metadata, aes(x = MDS1, y = MDS2, color=megahit_detection)) +
geom_point(size = 3, alpha = 0.7) +
geom_point(data = centroids,
aes(x = centroid_MDS1, y = centroid_MDS2, fill = plasmid_type),
shape = 23, size = 6, color = "black", stroke = 1) +
labs(title = "MDS of Plasmids Based on Tetranucleotide Similarity",
x = "MDS Dimension 1", y = "MDS Dimension 2") +
theme_minimal() + theme(legend.title = element_text(size=12),
plot.title = element_text(hjust=0.5))
library(ggplot2)
library(dplyr)
# Calculate group centroids
centroids <- mds_with_metadata %>%
group_by(megahit_detection) %>%
summarise(
centroid_MDS1 = mean(MDS1, na.rm = TRUE),
centroid_MDS2 = mean(MDS2, na.rm = TRUE),
.groups = 'drop'
)
ggplot(mds_with_metadata, aes(x = MDS1, y = MDS2, color=megahit_detection)) +
geom_point(size = 3, alpha = 0.7) +
geom_point(data = centroids,
aes(x = centroid_MDS1, y = centroid_MDS2, fill = megahit_detection),
shape = 23, size = 6, color = "black", stroke = 1) +
labs(title = "MDS of Plasmids Based on Tetranucleotide Similarity",
x = "MDS Dimension 1", y = "MDS Dimension 2") +
theme_minimal() + theme(legend.title = element_text(size=12),
plot.title = element_text(hjust=0.5))
library(ggplot2)
library(dplyr)
# Calculate group centroids
#centroids <- mds_with_metadata %>%
#  group_by(megahit_detection) %>%
#  summarise(
#    centroid_MDS1 = mean(MDS1, na.rm = TRUE),
#    centroid_MDS2 = mean(MDS2, na.rm = TRUE),
#    .groups = 'drop'
#  )
ggplot(mds_with_metadata, aes(x = MDS1, y = MDS2, color=megahit_detection, shape = megahit_detection)) +
geom_point(size = 3, alpha = 0.7) +
#geom_point(data = centroids,
#aes(x = centroid_MDS1, y = centroid_MDS2, fill = megahit_detection),
#shape = 23, size = 6, color = "black", stroke = 1) +
labs(title = "MDS of Plasmids Based on Tetranucleotide Similarity",
x = "MDS Dimension 1", y = "MDS Dimension 2") +
theme_minimal() + theme(legend.title = element_text(size=12),
plot.title = element_text(hjust=0.5))
View(mds_with_metadata)
library(dplyr)
print(nrow(mds_with_metadata))
mds_with_metadata_mpspades <- mds_with_metadata %>%
filter(mpspades_detection != "")
print(nrow(mds_with_metadata_mpspades))
ggplot(mds_with_metadata_mpspades, aes(x = MDS1, y = MDS2, color=mpspades_detection, shape = mpspades_detection)) +
geom_point(size = 3, alpha = 0.7) +
#geom_point(data = centroids,
#aes(x = centroid_MDS1, y = centroid_MDS2, fill = megahit_detection),
#shape = 23, size = 6, color = "black", stroke = 1) +
labs(title = "MDS of Plasmids Based on Tetranucleotide Similarity",
x = "MDS Dimension 1", y = "MDS Dimension 2") +
theme_minimal() + theme(legend.title = element_text(size=12),
plot.title = element_text(hjust=0.5))
library(pairwiseAdonis)
pairwise_result_mpspades <- pairwise.adonis(mds_dist,
mds_with_metadata_mpspades$mpspades_detection,
perm = 999)
library(pairwiseAdonis)
pairwise_result_mpspades <- pairwise.adonis(tetra,
mds_with_metadata_mpspades$mpspades_detection,
perm = 999)
View(mds_result)
library(pairwiseAdonis)
pairwise_result_mpspades <- pairwise.adonis(mds_coords,
mds_with_metadata_mpspades$mpspades_detection,
perm = 999)
View(mds_coords)
head(mds_coords)
library(pairwiseAdonis)
mds_dist_mpspades <- dist(mds_with_metadata_mpspades[, c("MDS1", "MDS2")])
pairwise_result_mpspades <- pairwise.adonis(mds_dist_mpspades,
mds_with_metadata_mpspades$mpspades_detection,
perm = 999)
print(pairwise_result_mpspades)
mds_dist_megahit <- dist(mds_with_metadata_megahit[, c("MDS1", "MDS2")])
library(pairwiseAdonis)
mds_dist_mpspades <- dist(mds_with_metadata_mpspades[, c("MDS1", "MDS2")])
pairwise_result_mpspades <- pairwise.adonis(mds_dist_mpspades,
mds_with_metadata_mpspades$mpspades_detection,
perm = 999)
print(pairwise_result_mpspades)
mds_dist_megahit <- dist(mds_with_metadata[, c("MDS1", "MDS2")])
pairwise_result_megahit <- pairwise.adonis(mds_coords_megahit,
mds_with_metadata$megahit_detection,
perm = 999)
library(pairwiseAdonis)
mds_dist_mpspades <- dist(mds_with_metadata_mpspades[, c("MDS1", "MDS2")])
pairwise_result_mpspades <- pairwise.adonis(mds_dist_mpspades,
mds_with_metadata_mpspades$mpspades_detection,
perm = 999)
print(pairwise_result_mpspades)
mds_dist_megahit <- dist(mds_with_metadata[, c("MDS1", "MDS2")])
pairwise_result_megahit <- pairwise.adonis(mds_dist_megahit,
mds_with_metadata$megahit_detection,
perm = 999)
print(pairwise_result_megahit)
