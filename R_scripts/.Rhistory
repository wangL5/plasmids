title = "Megahit Contigs per CAMI2 Plasmid Reference Genome",
y = "CAMI2 Plasmid Reference Genomes (108)",
x = "CAMI2 Marine Metagenome Samples"
)
#| echo: False
print(mapping_dot_plot)
#| echo: False
# insert recruitment plot of most fragmented reference genomes
View(per_contig_data)
#| echo: False
mapping_data <- read.csv("megahit_minimap_combined_mapping_data.txt", sep="\t")
#| echo: false
library(ggplot2)
CAMI2_boxplot <- ggplot(per_contig_data, aes(x = classifier, y = f1_score, fill = assembler)) +
scale_fill_manual(values=c("orange", "cornflowerblue")) +
geom_boxplot(outlier.shape = NA, alpha = 0.8, position = position_dodge(width = 0.8)) +
facet_wrap(~metric, scales = "free_y", ncol = 2) +
theme_minimal(base_size = 14) +
labs(
title = "Performance Metrics by Classifier and Assembler", x = "", y = "", fill = "",
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face = "bold"),
plot.title = element_text(hjust=0.5)
)
plot(CAMI2_boxplot)
#| echo: false
library(ggplot2)
f1_score_boxplot <- ggplot(per_contig_data, aes(x = classifier, y = f1_score, fill = assembler)) + geom_boxplot(position = position_dodge(width=0.8)) +
scale_fill_manual(values=c("orange", "cornflowerblue")) +
theme_minimal(base_size = 14) +
labs(title = "F1 Score by Classifier and Assembler", x = "", y = "", fill = "",
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face = "bold"),
plot.title = element_text(hjust=0.5),
panel.grid.major.x = element_blank()
)
plot(f1_score_boxplot)
#| echo: false
library(ggplot2)
f1_score_boxplot <- ggplot(per_contig_data, aes(x = classifier, y = f1_score, fill = assembler)) + geom_boxplot(position = position_dodge(width=0.8)) +
scale_fill_manual(values=c("orange", "cornflowerblue")) +
theme_minimal(base_size = 14) +
labs(title = "F1 Score by Classifier and Assembler", x = "", y = "", fill = "",
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face = "bold"),
plot.title = element_text(hjust=0.5),
panel.grid.major.x = element_blank()
) +
x_axis_discretec("DeepMicroClass", "geNomad", "MobRecon", "PlasClass", "PLASMe", "Plasmidfinder", "PlasX 0.5", "PlasxX 0.75", "Plasx 0.9", "Platon", "viralVerify")
#| echo: false
library(ggplot2)
f1_score_boxplot <- ggplot(per_contig_data, aes(x = classifier, y = f1_score, fill = assembler)) + geom_boxplot(position = position_dodge(width=0.8)) +
scale_fill_manual(values=c("orange", "cornflowerblue")) +
theme_minimal(base_size = 14) +
labs(title = "F1 Score by Classifier and Assembler", x = "", y = "", fill = "",
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face = "bold"),
plot.title = element_text(hjust=0.5),
panel.grid.major.x = element_blank()
) +
x_axis_discrete=c("DeepMicroClass", "geNomad", "MobRecon", "PlasClass", "PLASMe", "Plasmidfinder", "PlasX 0.5", "PlasxX 0.75", "Plasx 0.9", "Platon", "viralVerify")
#| echo: false
library(ggplot2)
f1_score_boxplot <- ggplot(per_contig_data, aes(x = classifier, y = f1_score, fill = assembler)) + geom_boxplot(position = position_dodge(width=0.8)) +
scale_fill_manual(values=c("orange", "cornflowerblue")) +
theme_minimal(base_size = 14) +
labs(title = "F1 Score by Classifier and Assembler", x = "", y = "", fill = "",
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face = "bold"),
plot.title = element_text(hjust=0.5),
panel.grid.major.x = element_blank()
) +
scale_x_discrete(labels = c("DeepMicroClass", "geNomad", "MobRecon", "PlasClass", "PLASMe", "Plasmidfinder", "PlasX 0.5", "PlasxX 0.75", "Plasx 0.9", "Platon", "viralVerify"))
plot(f1_score_boxplot)
#| echo: false
library(ggplot2)
f1_score_boxplot <- ggplot(per_contig_data, aes(x = classifier, y = f1_score, fill = assembler)) + geom_boxplot(position = position_dodge(width=0.8)) +
scale_fill_manual(values=c("orange", "cornflowerblue"), labels = c("megahit", "metaplasmidSPAdes")) +
theme_minimal(base_size = 14) +
labs(title = "F1 Score by Classifier and Assembler", x = "", y = "", fill = "",
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face = "bold"),
plot.title = element_text(hjust=0.5),
panel.grid.major.x = element_blank()
) +
scale_x_discrete(labels = c("DeepMicroClass", "geNomad", "MobRecon", "PlasClass", "PLASMe", "Plasmidfinder", "PlasX (0.5)", "PlasxX (0.75)", "Plasx (0.9)", "Platon", "viralVerify"))
plot(f1_score_boxplot)
#| echo: false
library(ggplot2)
f1_score_boxplot <- ggplot(per_contig_data, aes(x = classifier, y = f1_score, fill = assembler)) + geom_boxplot(position = position_dodge(width=0.8)) +
scale_fill_manual(values=c("orange", "cornflowerblue"), labels = c("megahit", "metaplasmidSPAdes")) +
theme_minimal(base_size = 14) +
labs(title = "F1 Score by Classifier and Assembler", x = "", y = "", fill = "",
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face = "bold"),
plot.title = element_text(hjust=0.5),
panel.grid.major.x = element_blank(),
legend.position="bottom"
) +
scale_x_discrete(labels = c("DeepMicroClass", "geNomad", "MobRecon", "PlasClass", "PLASMe", "Plasmidfinder", "PlasX (0.5)", "PlasxX (0.75)", "Plasx (0.9)", "Platon", "viralVerify"))
plot(f1_score_boxplot)
#| echo: false
library(ggplot2)
f1_score_boxplot <- ggplot(per_contig_data, aes(x = classifier, y = f1_score, fill = assembler)) + geom_boxplot(position = position_dodge(width=0.8)) +
scale_fill_manual(values=c("orange", "cornflowerblue"), labels = c("megahit", "metaplasmidSPAdes")) +
theme_minimal(base_size = 14) +
labs(title = "CAMI2 Plasmid Benchmarking: F1 Score by Classifier and Assembler", x = "", y = "", fill = "",
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face = "bold"),
plot.title = element_text(hjust=0.5),
panel.grid.major.x = element_blank(),
legend.position="bottom"
) +
scale_x_discrete(labels = c("DeepMicroClass", "geNomad", "MobRecon", "PlasClass", "PLASMe", "Plasmidfinder", "PlasX (0.5)", "PlasxX (0.75)", "Plasx (0.9)", "Platon", "viralVerify"))
plot(f1_score_boxplot)
#| echo: False
# CAMI2 Precision-Recall Figure
library(ggplot2)
library(dplyr)
library(pals)
CAMI2_PR_curve <- ggplot(per_contig_data, aes(x = recall, y = precision, color = classifier)) + scale_color_manual(values=unname(alphabet())) +
geom_point(alpha = 0.7, size = 2) +
facet_wrap(~ assembler) +
labs(
title = "Precision vs Recall by Assembler and Classifier",
x = "Recall",
y = "Precision",
color = "Classifier"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(CAMI2_PR_curve)
#| echo: False
# CAMI2 Precision-Recall Figure
library(ggplot2)
library(dplyr)
library(pals)
CAMI2_PR_curve <- ggplot(per_contig_data, aes(x = recall, y = precision, color = classifier)) + scale_color_manual(values=unname(alphabet()), labels = c("DeepMicroClass", "geNomad", "MobRecon", "PlasClass", "PLASMe", "Plasmidfinder", "PlasX (0.5)", "PlasxX (0.75)", "Plasx (0.9)", "Platon", "viralVerify")) +
geom_point(alpha = 0.7, size = 2) +
facet_wrap(~ assembler, labeller = as_labeller(c("megahit", "metaplasmidSPAdes"))) +
labs(
title = "Precision vs Recall by Assembler and Classifier",
x = "Recall",
y = "Precision",
color = "Classifier"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(CAMI2_PR_curve)
#| echo: False
# CAMI2 Precision-Recall Figure
library(ggplot2)
library(dplyr)
library(pals)
CAMI2_PR_curve <- ggplot(per_contig_data, aes(x = recall, y = precision, color = classifier)) + scale_color_manual(values=unname(alphabet()), labels = c("DeepMicroClass", "geNomad", "MobRecon", "PlasClass", "PLASMe", "Plasmidfinder", "PlasX (0.5)", "PlasxX (0.75)", "Plasx (0.9)", "Platon", "viralVerify")) +
geom_point(alpha = 0.7, size = 2) +
facet_wrap(~ assembler, labeller = as_labeller(c("mpspades" = "metaplasmidSPAdes"))) +
labs(
title = "Precision vs Recall by Assembler and Classifier",
x = "Recall",
y = "Precision",
color = "Classifier"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(CAMI2_PR_curve)
#| echo: False
# CAMI2 Precision-Recall Figure
library(ggplot2)
library(dplyr)
library(pals)
CAMI2_PR_curve <- ggplot(per_contig_data, aes(x = recall, y = precision, color = classifier)) + scale_color_manual(values=unname(alphabet()), labels = c("DeepMicroClass", "geNomad", "MobRecon", "PlasClass", "PLASMe", "Plasmidfinder", "PlasX (0.5)", "PlasxX (0.75)", "Plasx (0.9)", "Platon", "viralVerify")) +
geom_point(alpha = 0.7, size = 2) +
facet_wrap(~ assembler, labeller = as_labeller(c("mpspades" = "metaplasmidSPAdes"))) +
labs(
title = "Precision vs Recall by Assembler and Classifier",
x = "Recall",
y = "Precision",
color = "Classifier"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(CAMI2_PR_curve)
#| echo: False
# CAMI2 Precision-Recall Figure
library(ggplot2)
library(dplyr)
library(pals)
CAMI2_PR_curve <- ggplot(per_contig_data, aes(x = recall, y = precision, color = classifier)) + scale_color_manual(values=unname(alphabet()), labels = c("DeepMicroClass", "geNomad", "MobRecon", "PlasClass", "PLASMe", "Plasmidfinder", "PlasX (0.5)", "PlasxX (0.75)", "Plasx (0.9)", "Platon", "viralVerify")) +
geom_point(alpha = 0.7, size = 2) +
facet_wrap(~ assembler) +
labs(
title = "Precision vs Recall by Assembler and Classifier",
x = "Recall",
y = "Precision",
color = "Classifier"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(CAMI2_PR_curve)
#| echo: False
# CAMI2 Precision-Recall Figure
library(ggplot2)
library(dplyr)
library(pals)
CAMI2_PR_curve <- ggplot(per_contig_data, aes(x = recall, y = precision, color = classifier)) + scale_color_manual(values=unname(alphabet()), labels = c("DeepMicroClass", "geNomad", "MobRecon", "PlasClass", "PLASMe", "Plasmidfinder", "PlasX (0.5)", "PlasxX (0.75)", "Plasx (0.9)", "Platon", "viralVerify")) +
geom_point(alpha = 0.7, size = 2) +
facet_wrap(~ assembler, labeller = as_labeller(c("mpSPAdes" = "metaplasmidSPAdes"))) +
labs(
title = "Precision vs Recall by Assembler and Classifier",
x = "Recall",
y = "Precision",
color = "Classifier"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(CAMI2_PR_curve)
#| echo: False
# CAMI2 Precision-Recall Figure
library(ggplot2)
library(dplyr)
library(pals)
CAMI2_PR_curve <- ggplot(per_contig_data, aes(x = recall, y = precision, color = classifier)) + scale_color_manual(values=unname(alphabet()), labels = c("DeepMicroClass", "geNomad", "MobRecon", "PlasClass", "PLASMe", "Plasmidfinder", "PlasX (0.5)", "PlasxX (0.75)", "Plasx (0.9)", "Platon", "viralVerify")) +
geom_point(alpha = 0.7, size = 2) +
facet_wrap(~ assembler, labeller = as_labeller(c("mpSPAdes" = "metaplasmidSPAdes", "megahit" = "megahit"))) +
labs(
title = "Precision vs Recall by Assembler and Classifier",
x = "Recall",
y = "Precision",
color = "Classifier"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(CAMI2_PR_curve)
#| echo: false
library(ggplot2)
#clean_labels = c("DeepMicroClass", "geNomad", "MobRecon", "PlasClass", "PLASMe", "Plasmidfinder", "PlasX (0.5)", "PlasxX (0.75)", "Plasx (0.9)", "Platon", "viralVerify")
f1_score_boxplot <- ggplot(per_contig_data, aes(x = classifier, y = f1_score, fill = assembler)) + geom_boxplot(position = position_dodge(width=0.8)) +
scale_fill_manual(values=c("orange", "cornflowerblue"), labels = c("megahit", "metaplasmidSPAdes")) +
theme_minimal(base_size = 14) +
labs(title = "CAMI2 Plasmid Benchmarking: F1 Score by Classifier and Assembler", x = "", y = "", fill = "",
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face = "bold"),
plot.title = element_text(hjust=0.5),
panel.grid.major.x = element_blank(),
legend.position="bottom"
)
plot(f1_score_boxplot)
#| echo: false
library(ggplot2)
clean_labels = c("DMC" = "DeepMicroClass", "genomad" = "geNomad", "mobrecon" = "MobRecon", "plasclass" = "PlasClass", "plasme" = "PLASMe", "plasmidfinder" = "Plasmidfinder", "plasx05" = "PlasX (0.5)", "plasx075" = "PlasxX (0.75)", "plasx09" = "Plasx (0.9)", "platon" = "Platon", "vv" = "viralVerify")
f1_score_boxplot <- ggplot(per_contig_data, aes(x = classifier, y = f1_score, fill = assembler)) + geom_boxplot(position = position_dodge(width=0.8)) +
scale_fill_manual(values=c("orange", "cornflowerblue"), labels = c("megahit", "metaplasmidSPAdes")) +
theme_minimal(base_size = 14) +
labs(title = "CAMI2 Plasmid Benchmarking: F1 Score by Classifier and Assembler", x = "", y = "", fill = "",
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face = "bold"),
plot.title = element_text(hjust=0.5),
panel.grid.major.x = element_blank(),
legend.position="bottom"
) +
scale_x_discrete(clean_labels)
plot(f1_score_boxplot)
#| echo: false
library(ggplot2)
clean_labels = c("DMC" = "DeepMicroClass", "genomad" = "geNomad", "mobrecon" = "MobRecon", "plasclass" = "PlasClass", "plasme" = "PLASMe", "plasmidfinder" = "Plasmidfinder", "plasx05" = "PlasX (0.5)", "plasx075" = "PlasxX (0.75)", "plasx09" = "Plasx (0.9)", "platon" = "Platon", "vv" = "viralVerify")
f1_score_boxplot <- ggplot(per_contig_data, aes(x = classifier, y = f1_score, fill = assembler)) + geom_boxplot(position = position_dodge(width=0.8)) +
scale_fill_manual(values=c("orange", "cornflowerblue"), labels = c("megahit", "metaplasmidSPAdes")) +
theme_minimal(base_size = 14) +
labs(title = "CAMI2 Plasmid Benchmarking: F1 Score by Classifier and Assembler", x = "", y = "", fill = "",
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face = "bold"),
plot.title = element_text(hjust=0.5),
panel.grid.major.x = element_blank(),
legend.position="bottom"
) +
scale_x_discrete(labels = clean_labels)
plot(f1_score_boxplot)
#| echo: False
# CAMI2 Precision-Recall Figure
library(ggplot2)
library(dplyr)
library(pals)
CAMI2_PR_curve <- ggplot(per_contig_data, aes(x = recall, y = precision, color = classifier)) + scale_color_manual(values=unname(alphabet()), labels = clean_labels) +
# clean_labels defined above in F1 boxplot
geom_point(alpha = 0.7, size = 2) +
facet_wrap(~ assembler, labeller = as_labeller(c("mpSPAdes" = "metaplasmidSPAdes", "megahit" = "megahit"))) +
labs(
title = "Precision vs Recall by Assembler and Classifier",
x = "Recall",
y = "Precision",
color = "Classifier"
) +
theme_minimal() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "bottom",
plot.title = element_text(hjust=0.5)
)
plot(CAMI2_PR_curve)
View(mapping_data_transformed)
View(per_contig_data)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(pals)
CAMI2_benchmarking_metrics_TP_contigs <- read.table("CAMI2_benchmarking_metrics_TPcontigs.tsv.txt", sep="\t", header=TRUE)
#| echo: false
library(pheatmap)
library(RColorBrewer)
#| echo: false
annotation_colors <- list(contig_length = colorRampPalette(brewer.pal(3,'PuBu'))(100),
coverage = colorRampPalette(brewer.pal(3, 'Spectral'))(100))
pheatmap(mpspades_data,
main = "Metaplasmidspades Plasmid Reference Detection Rates (%)",
show_rownames = FALSE,
color = colorRampPalette(brewer.pal(3, 'RdYlBu'))(100),
annotation_row = filtered_plasmid_CE_annotations,
annotation_names_row = F)
#| echo: false
annotation_colors <- list(contig_length = colorRampPalette(brewer.pal(3,'PuBu'))(100),
coverage = colorRampPalette(brewer.pal(3, 'Spectral'))(100))
pheatmap(mpspades_data,
main = "Metaplasmidspades Plasmid Reference Detection Rates (%)",
show_rownames = FALSE,
color = colorRampPalette(brewer.pal(3, 'RdYlBu'))(100),
# annotation_row = filtered_plasmid_CE_annotations,
#annotation_names_row = F)
#| echo: false
annotation_colors <- list(contig_length = colorRampPalette(brewer.pal(3,'PuBu'))(100),
coverage = colorRampPalette(brewer.pal(3, 'Spectral'))(100))
pheatmap(mpspades_data,
main = "Metaplasmidspades Plasmid Reference Detection Rates (%)",
show_rownames = FALSE,
color = colorRampPalette(brewer.pal(3, 'RdYlBu'))(100))
# annotation_row = filtered_plasmid_CE_annotations,
#annotation_names_row = F)
View(per_contig_data)
#| echo: false
pheatmap(megahit_data,
main = "Megahit Plasmid Reference Detection Rates (%)",
show_rownames = FALSE,
color = colorRampPalette(brewer.pal(3, 'RdYlBu'))(100))
#annotation_row = filtered_plasmid_CE_annotations,
#annotation_names_row = F)
#| echo: false
library(ggplot2)
clean_labels = c("DMC" = "DeepMicroClass", "genomad" = "geNomad", "mobrecon" = "MobRecon", "plasclass" = "PlasClass", "plasme" = "PLASMe", "plasmidfinder" = "Plasmidfinder", "plasx05" = "PlasX (0.5)", "plasx075" = "PlasxX (0.75)", "plasx09" = "Plasx (0.9)", "platon" = "Platon", "vv" = "viralVerify")
f1_score_boxplot <- ggplot(per_contig_data, aes(x = classifier, y = f1_score, fill = assembler)) + geom_boxplot(position = position_dodge(width=0.8)) +
scale_fill_manual(values=c("orange", "cornflowerblue"), labels = c("megahit", "metaplasmidSPAdes")) +
theme_minimal(base_size = 14) +
labs(title = "CAMI2 Plasmid Benchmarking: F1 Score by Classifier and Assembler", x = "", y = "", fill = "",
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face = "bold"),
plot.title = element_text(hjust=0.5),
panel.grid.major.x = element_blank(),
legend.position="bottom"
) +
scale_x_discrete(labels = clean_labels)
plot(f1_score_boxplot)
#| echo: false
# renaming the matrix columns
colnames(mpspades_data) <- clean_labels[colnames(mpspades_data)]
colnames(megahit_data) <- clean_labels[colnames(megahit_data)]
#| echo: false
annotation_colors <- list(contig_length = colorRampPalette(brewer.pal(3,'PuBu'))(100),
coverage = colorRampPalette(brewer.pal(3, 'Spectral'))(100))
pheatmap(mpspades_data,
main = "MetaplasmidSPAdes Plasmid Reference Detection Rates (%)",
show_rownames = FALSE,
color = colorRampPalette(brewer.pal(3, 'RdYlBu'))(100))
# annotation_row = filtered_plasmid_CE_annotations,
#annotation_names_row = F)
#| echo: false
# renaming the matrix columns
colnames(mpspades_data) <- clean_labels[colnames(mpspades_data)]
colnames(megahit_data) <- clean_labels[colnames(megahit_data)]
#| echo: false
library(ggplot2)
clean_labels = c("DMC" = "DeepMicroClass", "genomad" = "geNomad", "mobrecon" = "MobRecon", "plasclass" = "PlasClass", "plasme" = "PLASMe", "plasmidfinder" = "Plasmidfinder", "plasx05" = "PlasX (0.5)", "plasx075" = "PlasxX (0.75)", "plasx09" = "Plasx (0.9)", "platon" = "Platon", "vv" = "viralVerify")
f1_score_boxplot <- ggplot(per_contig_data, aes(x = classifier, y = f1_score, fill = assembler)) + geom_boxplot(position = position_dodge(width=0.8)) +
scale_fill_manual(values=c("orange", "cornflowerblue"), labels = c("megahit", "metaplasmidSPAdes")) +
theme_minimal(base_size = 14) +
labs(title = "CAMI2 Plasmid Benchmarking: F1 Score by Classifier and Assembler", x = "", y = "", fill = "",
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face = "bold"),
plot.title = element_text(hjust=0.5),
panel.grid.major.x = element_blank(),
legend.position="bottom"
) +
scale_x_discrete(labels = clean_labels)
plot(f1_score_boxplot)
#| echo: false
# read in data
mpspades_data <- read.csv("mpspades_heatmap.csv", row.names = 1)
megahit_data <- read.csv("megahit_heatmap.csv", row.names=1)
#| echo: false
# renaming the matrix columns
colnames(mpspades_data) <- clean_labels[colnames(mpspades_data)]
colnames(megahit_data) <- clean_labels[colnames(megahit_data)]
#| echo: false
library(pheatmap)
library(RColorBrewer)
#| echo: false
annotation_colors <- list(contig_length = colorRampPalette(brewer.pal(3,'PuBu'))(100),
coverage = colorRampPalette(brewer.pal(3, 'Spectral'))(100))
pheatmap(mpspades_data,
main = "MetaplasmidSPAdes Plasmid Reference Detection Rates (%)",
show_rownames = FALSE,
color = colorRampPalette(brewer.pal(3, 'RdYlBu'))(100))
# annotation_row = filtered_plasmid_CE_annotations,
#annotation_names_row = F)
#| echo: false
pheatmap(megahit_data,
main = "Megahit Plasmid Reference Detection Rates (%)",
show_rownames = FALSE,
color = colorRampPalette(brewer.pal(3, 'RdYlBu'))(100))
#annotation_row = filtered_plasmid_CE_annotations,
#annotation_names_row = F)
View(megahit_data)
#| echo: false
# read in data
mpspades_data <- read.csv("mpspades_heatmap.csv", row.names = 1)
megahit_data <- read.csv("megahit_heatmap.csv", row.names=1)
View(megahit_data)
View(mpspades_data)
View(megahit_data)
mpspades_data <- read.csv("mpspades_heatmap.csv", row.names = 1)
megahit_data <- read.csv("megahit_heatmap.csv", row.names=1)
# read in metadata
plasmid_CE_annotations <- read.csv("plasmid_CE_metadata.txt", row.names=1, sep="\t")
#| echo: false
# read in data
mpspades_data <- read.csv("mpspades_heatmap.csv", row.names = 1)
megahit_data <- read.csv("megahit_heatmap.csv", row.names=1)
#| echo: false
# renaming the matrix columns
colnames(mpspades_data) <- clean_labels[colnames(mpspades_data)]
colnames(megahit_data) <- clean_labels[colnames(megahit_data)]
#| echo: false
library(pheatmap)
library(RColorBrewer)
#| echo: false
annotation_colors <- list(contig_length = colorRampPalette(brewer.pal(3,'PuBu'))(100),
coverage = colorRampPalette(brewer.pal(3, 'Spectral'))(100))
pheatmap(mpspades_data,
main = "MetaplasmidSPAdes Plasmid Reference Detection Rates (%)",
show_rownames = FALSE,
color = colorRampPalette(brewer.pal(3, 'RdYlBu'))(100))
# annotation_row = filtered_plasmid_CE_annotations,
#annotation_names_row = F)
#| echo: false
pheatmap(megahit_data,
main = "Megahit Plasmid Reference Detection Rates (%)",
show_rownames = FALSE,
color = colorRampPalette(brewer.pal(3, 'RdYlBu'))(100))
#annotation_row = filtered_plasmid_CE_annotations,
#annotation_names_row = F)
